version: '3.2'
services:
  infrastructure:
    image: dawapack:1.0.0-playground_dms
    container_name: infrastructure_dms
    build:
      dockerfile: Dockerfile
      context: ./var/docker
    stop_grace_period: 30s
    stdin_open: true
    tty: true
    environment:
      ORIGIN: "eu"
      REGION: "eu-bucharest-1"
    volumes:
      - type: bind
        source: ./dms/infrastructure/src
        target: /var/www
      - type: bind
        source: ./var/asyncapi/src
        target: /var/asyncapi
  authors:
    image: dawapack:1.0.0-playground_dms
    container_name: authors_dms
    build:
      dockerfile: Dockerfile
      context: ./var/docker
    stop_grace_period: 30s
    stdin_open: true
    tty: true
    environment:
      ORIGIN: "eu"
      REGION: "eu-bucharest-1"
    volumes:
      - type: bind
        source: ./dms/authors/src
        target: /var/www
      - type: bind
        source: ./var/asyncapi/src
        target: /var/asyncapi
  posts:
    image: dawapack:1.0.0-playground_dms
    container_name: posts_dms
    build:
      dockerfile: Dockerfile
      context: ./var/docker
    stop_grace_period: 30s
    stdin_open: true
    tty: true
    environment:
      ORIGIN: "eu"
      REGION: "eu-bucharest-1"
    volumes:
      - type: bind
        source: ./dms/posts/src
        target: /var/www
      - type: bind
        source: ./var/asyncapi/src
        target: /var/asyncapi
  rabbitmq:
    image: rabbitmq:3.9.0-management-alpine
    container_name: rabbitmq_dms
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
  redis:
    image: redis:6.2-alpine
    container_name: redis_dms
    restart: on-failure
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    volumes:
      - type: volume
        source: redis-data
        target: /data
volumes:
  redis-data:
